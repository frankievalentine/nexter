// COLORS
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONTS
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

// MEDIA QUERY BREAKPOINTS
$bp-largest: 75em; // 1200px 1200/16 = 75
$bp-large: 62.5em; // 1000px
$bp-medium: 50em; // 800px
$bp-small: 37.5em; // 600px

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // 1rem = 10px 10/16 62.5%

    @media only screen and (max-width: $bp-largest) {
        font-size: 50%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6;
}

.container {
    display: grid;

    // row by row, from the start think about responsiveness for the specific content
    // rows carry the height of the content to adapt to the content
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content);

    // 140px = 1140/8 = 142.5
    // 80px sidebar, 1fr column occupies remaining space, with an 8 column grid style, width of each column to be between the width of their min content and 140px, and 1fr column occupies remaining space
    // 1fr are in place to center the 8 column grid style, and offer full-bleed sections, if no center is needed you can use margin auto or justify-content
    // minmax(6rem, 1fr) on the remaining space columns responsive not less than 60px always a margin between content and end of page
    // unquote used for live sass compiler vscode
    grid-template-columns: unquote("[sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]");


    // Remove first column [sidebar-start/sidebar-end] and add a new row [6rem = 48px / 1rem = 8px] at 1000px
    @media only screen and (max-width: $bp-large) {
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
        grid-template-columns: unquote("[full-start] minmax(6rem, 1fr) [center-start]repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]");
    }

    // New row after the header min-content at 800px
    // Change vh to 100%, but extends further than we want so we use calc to subtract the added 6rem row at 1000px
    // Rest of rows will be size based on the content
    @media only screen and (max-width: $bp-medium) {
        grid-template-rows: 6rem calc(100vh - 6rem);
    }
}